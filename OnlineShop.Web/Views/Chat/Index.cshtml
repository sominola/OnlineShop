@model OnlineShop.Web.ViewModels.Chats.ChatIndexViewModel
@inject UserManager<User> _userManager
<style>

.chat-wrapper {
	padding: 0;
	border-radius: 12px;
    box-shadow: rgba(0, 0, 0, 0.22) 0 19px 43px;
	overflow: hidden;
}

.chat-sidebar {
	border-right: 1px solid #eaeaea;
	padding: 0;
}

.chat-list {
	overflow: hidden;
	overflow-y: scroll;
	min-height: 100%;
}
.chat-list::-webkit-scrollbar-track, .chat-history::-webkit-scrollbar-track {
	-webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);
	background-color: #F5F5F5;
}

.chat-list::-webkit-scrollbar, .chat-history::-webkit-scrollbar{
	width: 10px;
	background-color: #F5F5F5;
}

.chat-list::-webkit-scrollbar-thumb, .chat-history::-webkit-scrollbar-thumb {
	background-color: #0ae;
	background-image: -webkit-gradient(linear, 0 0, 0 100%, color-stop(.5, rgba(255, 255, 255, .2)), color-stop(.5, transparent), to(transparent));
}

.chat-list .content {
	padding: 10px 15px;
	border-radius: 3px;
}

.chat-list .content:hover {
	cursor: pointer;
	background: #efefef;
}

.chat-list .content {
	min-height: 68px;
}

.chat-list .content img {
	float: left;
	border-radius: 50%;
	max-height: 48px;
}

.chat-list .content .about {
	margin: auto;
	float: left;
	padding-left: 8px;
}

.chat-list .content .about p {
	font-size: 15px;
	margin: 0;
}

.chat-list .content .about .message {
	color: #999;
	font-size: 15px;
	overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
    max-width: 230px;
}

@@media (max-width: 1200px) {
  .chat-list .content .about .message  {
        max-width: 140px;
  }
}

.chat-message {
	padding: 0;
}

.chat-message .header-message {
	padding: 15px 25px;
	overflow: hidden;
	border-bottom: 2px solid #f4f7f6;
}

.chat-message .header-message a img {
	float: left;
	border-radius: 50%;
	max-height: 48px;
}

.chat-message div.name {
	float: left;
	margin-left: 8px;
}

.chat-message div.name h5{
    margin-bottom: .5rem;
    font-weight: 500;
    line-height: 1.2;
}

.chat-message .chat-history {
    padding: 20px 20px 0 20px;
    border-bottom: 2px solid #fff;
    	height: 600px;
    	overflow: hidden;
    	overflow-y: scroll;
}

.clearfix:after {
    visibility: hidden;
    display: block;
    font-size: 0;
    content: " ";
    clear: both;
    height: 0;
}


.chat-message .chat-history ul li:not(:last-child){
    margin-bottom: 30px;
}
.chat-message .chat-history ul li:last-child{
    margin-bottom: 20px;
}



.chat-message .chat-history ul li .message{
    background: #efefef;
    color: #444;
    float: left;
    line-height: 26px;
    font-size: 16px;
    border-radius: 7px;
    max-width: 400px;
    word-wrap: break-word;
    padding: 7px 12px;
}

.chat-message .chat-history ul li .message h4{
    font-size: 16px;
    margin: 0;
    color: rgb(250, 121, 15);

}

.chat-message .chat-history ul li .message p{
    margin: 0;
    line-height: 26px;
    font-size: 16px;
    border-radius: 7px;
    max-width: 330px;
    word-wrap: break-word;

}

.chat-message .chat-history ul li img {
	float: left;
	border-radius: 50%;
	max-height: 48px;
	margin-right: 6px;
	position: relative;
    transform: translateY(0%);
}
.chat-message .chat-history ul li .message.my-message{
    background: #e8f1f3;
    float: right;
}
.chat-message .chat-input {
    padding: 0 20px 20px 20px;
}

.chat-message .chat-input{
    position: relative;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap;
    -ms-flex-align: stretch;
    align-items: stretch;
    width: 100%;
}
.input-group-text {
    background-color: #e9ecef;
    border: 1px solid #ced4da;
    border-radius: .25rem;
    font-size: 24px;
}

.input-group-text:hover {
    color: #86d4f5;
}

.chat-message .chat-input .input-group input:not([type=checkbox]) {
    background-color: transparent;
    box-shadow: 0 1px 3px -2px #9098a9;
    border-radius: 5px;
    border: 1px solid #ebebeb;
    color: #333;
    font-size: 15px;
    height: 45px;
    padding: 0 15px;
}
</style>
<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/6.0.0-rc.2.21480.10/signalr.min.js" integrity="sha512-Pib2Ig8Wo46LSehXqzVBk4zPfijTktX9IaZ9HNd1tX1FOK6Pp3rgQI32a6zHG9ShCKGzdHZD8T4qoqA3S7yb0A==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
<div class="container" style="margin: 75px auto 150px auto;">
    <div class="row">
        <div class="chat-wrapper row">
            <div class="chat-sidebar col-lg-3">
                <div class="chat-list-search">
                </div>
                <ul class="chat-list">
                    @foreach (var chat in Model.Chats)
                    {
                        <li class="content">
                            <img src="https://pbs.twimg.com/media/DGzgclNXYAEJDy4.jpg" alt=""/>
                            <div class="about">

                                <p>@chat.Messages.LastOrDefault()?.UserName</p>
                                <p class="message">
                                    @chat.Messages.LastOrDefault()?.Text
                                </p>
                            </div>
                        </li>
                    }
                </ul>
            </div>
            <div class="chat-message col-lg">
                <div class="header-message">
                    <a>
                        <img src="https://pbs.twimg.com/media/DGzgclNXYAEJDy4.jpg" alt=""/>
                    </a>
                    <div class="name">
                        <h5>Nikita</h5>
                    </div>
                </div>
                <div id="chat-history" class="chat-history">
                    <ul id="chatroom">
                        @foreach (var message in Model.CurrentChat.Messages)
                        {
                            <li class="clearfix">
                                @{
                                    var currentUser = await _userManager.GetUserAsync(User);
                                    var sameName = message.UserId == currentUser.Id;
                                    if (sameName)
                                    {
                                        <div class="message my-message" data-bs-toggle="tooltip" title="@message.Timestamp">
                                            <p>@message.Text</p>
                                        </div>
                                    }
                                    else
                                    {
                                        <img src="https://pbs.twimg.com/media/DGzgclNXYAEJDy4.jpg" alt=""/>
                                    
                                        <div class="message" data-bs-toggle="tooltip" title="@message.Timestamp">
                                            <h4>@message.UserName</h4>
                                            <p>@message.Text</p>
                                        </div>
                                    }
                                }
                            </li>
                        }
                    </ul>
                </div>
                <div class="chat-input">
                    <div class="input-group">
                        <input id="message" type="text" class="form-control" placeholder="Enter text here...">
                        <input type="hidden" name="roomId" value="@Model.CurrentChat.Id">
                        <button id="sendBtn" class="input-group-text">
                            <i class="fal fa-paper-plane"></i>
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script>
$(function (){
        scrollDown();
        function scrollDown()
        {
             let divs = $("#chat-history");
                    divs.scrollTop(divs.prop('scrollHeight'));
        }
});
const hubConnection = new signalR.HubConnectionBuilder().withUrl("/chats").build();
let connectionId = "";

@{
        var user = await _userManager.GetUserAsync(User);
        var nameUser = user.Name;
        @: var userName = "@nameUser";
}

hubConnection.on("ReceiveMessage", function(data) {

    let li = document.createElement("li");
    li.className +="clearfix";

    let div = document.createElement("div");
    div.className += "message";
    div.setAttribute("data-bs-toggle","tooltip")
    div.setAttribute("title",data.timestamp)
    
    let message = document.createElement("p");
    message.appendChild(document.createTextNode(data.text));
    
    if (userName === data.name)
    {
        div.className += " my-message"
        div.appendChild(message);
    }
    else
    {
       let img = document.createElement("img");
       img.src = "https://pbs.twimg.com/media/DGzgclNXYAEJDy4.jpg"
       li.appendChild(img);
       
       let h4 = document.createElement("h4");
       h4.appendChild(document.createTextNode(data.name));
       div.appendChild(h4);
       div.appendChild(message);
    }
    li.appendChild(div);
  
    
    
    document.getElementById("chatroom").appendChild(li);
    
        let divs = $("#chat-history");
        divs.scrollTop(divs.prop('scrollHeight'));
})

function sendMessage() {
    let message = document.getElementById("message").value;
    $.post("/chat/SendMessage", 
    { 
        roomId: "@Model.CurrentChat.Id",
        message: message 
    } ).catch(error => console.error("Error: ", error));
    document.getElementById("message").value = "";
}
$(document).keyup(function(event) {
    if ($("#message").is(":focus") && event.key == "Enter") {
        sendMessage();
    }
});

document.getElementById("sendBtn").addEventListener("click", function(e) {
    sendMessage();
});

 hubConnection.start();
</script>